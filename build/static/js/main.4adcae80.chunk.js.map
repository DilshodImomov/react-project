{"version":3,"sources":["components/Logo/Logo.png","components/Image/loading.gif","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Image/Image.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","changeRoute","isSigned","route","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","height","width","src","logoImg","alt","Image","imageUrl","ImageLinkForm","ChangeInput","SubmitButton","input","textAlign","whiteSpace","ref","type","onChange","onKeyDown","event","key","Rank","name","entries","concat","SignIn","loadUser","_useState","useState","_useState2","Object","slicedToArray","emailField","setEmailField","_useState3","_useState4","passwordField","setPasswordField","id","htmlFor","target","value","fetch","method","headers","Content-Type","body","JSON","stringify","email","password","then","resp","json","data","catch","err","console","log","Register","_useState5","_useState6","nameField","setNameField","d","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","client","createClient","App","inputField","setInputField","setImageUrl","setRoute","_useState7","_useState8","setIsSigned","_useState9","_useState10","user","setUser","useRef","particlesInit","useCallback","asyncToGenerator","_callee","engine","_context","loadFull","_x","apply","arguments","particlesLoaded","_ref2","_callee2","container","_context2","_x2","requestImage","_ref3","_callee3","query","page","_context3","loadingImg","photos","search","per_page","large2x","_x3","_x4","joined","esm","init","loaded","options","particles","links","distance","enable","move","number","density","area","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","current","blur","assign","components_Image_Image","components_Register_Register","components_SignIn_SignIn","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4adcae80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.8f05c5c5.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.572025d9.gif\";","import React from \"react\";\n\n\nconst Navigation = ({changeRoute, isSigned, route}) => {\n    return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n            {\n                isSigned === true\n                ?<p onClick={()=>{changeRoute('signIn')}} className=\"f4 link dim black underline pa3 pointer\">Sign Out</p>\n                :route === 'register'?<p onClick={()=>{changeRoute('signIn')}} className=\"f4 link dim black underline pa3 pointer\">Sign In</p>\n                :<p onClick={()=>{changeRoute('register')}} className=\"f4 link dim black underline pa3 pointer\">Register</p>\n            }\n        </nav>\n    );\n}\n\nexport default Navigation;","import React from \"react\";\n// import Tilt from \"react-tilt\";\nimport logoImg from \"./Logo.png\";\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0 br4\" >\n                <div className=\"br4\" style={{ height: 150, width: 150 }}>\n                    <img src={logoImg} className=\"br4\" alt=\"\" />\n                </div>\n        </div>\n    );\n}\n\nexport default Logo;","import React from \"react\";\nimport './image.css'\n\nconst Image = ( {imageUrl} ) => {\n    if ( imageUrl !== 'None' ) {\n        return (\n            <div>\n                <div className=\"imageContainer center\">\n                    <img className=\"image br3\" src={imageUrl} alt=\"\"/>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <p className=\"white f3 b center\">Nothing Found! Try something else.</p>\n    );\n}\n\nexport default Image;","import React from \"react\";\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({ChangeInput, SubmitButton, input}) => {\n    return (\n        <div className=\"\" style={{textAlign: 'center'}}>\n            <p className=\"f4\" style={{whiteSpace: 'break-spaces'}}>\n                {`This Magic brain will show pictures based on your search. Give it a try!`}\n            </p>\n            <div className=\"\" style={{display:'flex', justifyContent:'center'}}>\n                <div className=\"pa4 br3 shadow-5 form\">\n                    <input ref={input} type=\"text\" className=\"f4 pa2 w-70\" onChange={ChangeInput} onKeyDown={(event) => {\n                        if ( event.key === 'Enter' ) {\n                            SubmitButton();\n                        }\n                    }}/>\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple pointer\" onClick={SubmitButton}>Detect</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;","import React from \"react\";\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className=\"white f3\" style={{textAlign:'center'}}>\n                {`${name}, your current entry is...`}\n            </div>\n            <div className=\"white f2\" style={{textAlign:'center'}}>\n                {`${entries}`}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React, { useState } from \"react\";\n\nconst SignIn = ({changeRoute, loadUser}) => {\n    const [emailField, setEmailField] = useState(\"\");\n    const [passwordField, setPasswordField] = useState(\"\");\n\n    const signIn = () => {\n        fetch('https://node-practice-t9xm.onrender.com/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: emailField,\n                password: passwordField\n            })\n        })\n        .then(resp => resp.json()).then(data => {\n            if ( data.id ) {\n                loadUser(data)\n                changeRoute('home');\n            }\n        }).catch((err) =>{\n            console.log(\"error!\", err);\n        })\n\n    }\n\n    return (\n        <div className=\"br2 ba dark-gray b--black-10 mv6 w-100 w-50-m w-25-l center shadow-5\">\n            <div className=\"pa4 black-80\">\n                <main className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                        <input  onChange={(event) => {setEmailField(event.target.value);}} \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" name=\"email-address\"  \n                                id=\"email-address\" />\n                    </div>\n                    <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                        <input  onChange={(event) => {setPasswordField(event.target.value);}}\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\" />\n                    </div>\n                    </fieldset>\n                    <div className=\"\">\n                    <input onClick={signIn} className=\"b ph3 pv2 ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                    <p onClick={() => {changeRoute('register');}} className=\"pointer f6 link dim black db\">Register</p>\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default SignIn;","import React, { useState } from \"react\";\n\nconst Register = ({changeRoute, loadUser}) => {\n    const [emailField, setEmailField] = useState(\"\");\n    const [passwordField, setPasswordField] = useState(\"\");\n    const [nameField, setNameField] = useState(\"\");\n\n    const register = () => {\n        fetch('https://node-practice-t9xm.onrender.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: emailField,\n                password: passwordField,\n                name: nameField\n            })\n        })\n        .then(resp => resp.json()).then(data => {\n            if ( data ) {\n                loadUser(data);\n                changeRoute('home');\n            }\n        }).catch((err) =>{\n            console.log(\"error!\", err);\n        })\n\n    }\n    return (\n        <div className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l center shadow-5\">\n            <div className=\"pa4 black-80\">\n                <main className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                        <input \n                        onChange={(event) => {setNameField(event.target.value);}}\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                        type=\"text\" \n                        name=\"name\"  \n                        id=\"name\" />\n                    </div>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                        <input \n                        onChange={(event) => {setEmailField(event.target.value);}}\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                        type=\"email\" \n                        name=\"email-address\"  \n                        d=\"email-address\" />\n                    </div>\n                    <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                        <input \n                        onChange={(event) => {setPasswordField(event.target.value);}}\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                        type=\"password\" \n                        name=\"password\"  \n                        id=\"password\" />\n                    </div>\n                    </fieldset>\n                    <div className=\"\">\n                    <input onClick={register} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                    <p onClick={() => {changeRoute('signIn')}} className=\"pointer f6 link dim black db\">Sign In</p>\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;","import React, { useRef, useState, useCallback } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Image from './components/Image/Image';\nimport loadingImg from './components/Image/loading.gif';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { createClient } from 'pexels';\n/* ------------- PEXELS API CONFIG ------------------ */\n\nconst PEXELS_API_KEY = '563492ad6f91700001000001613c9cd81c434f058d0faa4ad2c2e616';\n\nconst client = createClient(PEXELS_API_KEY);\n\n\n\n/* ------------- APP ------------------ */\n\n\nfunction App() {\n/* ------------- HOOKS ------------------ */\n  const [inputField, setInputField] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [route, setRoute] = useState(\"home\")\n  const [isSigned, setIsSigned] = useState(false);\n  const [user, setUser] = useState({});\n  const input = useRef();\n\n\n/* ------------- PARTICLES JS CONFIG ------------------ */\n  const particlesOptions = {\n    particles: {\n        links: {\n            distance: 150,\n            enable: true,\n        },\n        move: {\n            enable: true,\n        },\n        number: {\n            density: {\n                enable: true,\n                area: 800,\n            },\n            value: 50,\n        },\n    },\n  };\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async container => {\n      // await console.log(container);\n  }, []);\n\n/* ------------- FUNCTIONS ------------------ */\n  const ChangeInput = (event) => {\n    setInputField(event.target.value);\n  }\n  const requestImage = async (query, page) => {\n    setImageUrl(loadingImg);\n    const resp = await client.photos.search({ query, page: page, per_page: 1 });\n    if ( resp.photos.length ) {\n      setImageUrl(resp.photos[0].src.large2x);\n      return true;\n    }\n    setImageUrl(\"None\");\n    return false\n  }\n  const SubmitButton = () => {\n    if ( inputField !== '' ) {\n      input.current.blur();\n      input.current.value = \"\";\n      if ( requestImage(inputField, 1) ) {\n        fetch('https://node-practice-t9xm.onrender.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: user.id\n          })\n        }).then(resp => resp.json())\n        .then(entry => {\n          setUser(Object.assign(user, {entries: entry}));\n        });\n      }\n    }\n  }\n  const changeRoute = (loc) => {\n    if ( loc === 'home' ) {\n      setIsSigned(true);\n    }\n    else {\n      setIsSigned(false);\n    }\n    setRoute(loc);\n  }\n\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    \n    });\n    setIsSigned(true);\n  }\n/* ------------- RENDERING ------------------ */\n  return (\n    <div className=\"App\">\n      <Particles\n          className='particles'\n          id=\"tsparticles\"\n          init={particlesInit}\n          loaded={particlesLoaded}\n          options={particlesOptions}\n      />\n      <Navigation changeRoute={changeRoute} isSigned={isSigned} route={route}/>\n      {\n      route === 'home' && isSigned\n      ?<div>\n        <div className=\"container\">\n          <Logo />\n          <div>\n            <Rank name={user.name} entries={user.entries} />\n            <ImageLinkForm ChangeInput={ChangeInput} SubmitButton={SubmitButton} input={input}/>\n          </div>\n        </div>\n        <Image imageUrl = {imageUrl}/>\n      </div>\n      :route==='register'?<Register changeRoute={changeRoute} loadUser={loadUser}/>:<SignIn changeRoute={changeRoute } loadUser={loadUser}/>\n    }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}